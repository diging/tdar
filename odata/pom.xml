<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id$ -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<artifactId>odata</artifactId>
	<packaging>war</packaging>
	<name>The Digital Archaeological Record (OData)</name>

	<properties>
		<servlet.api.version>3.0.1</servlet.api.version>
		<apache.cxf.version>3.1.1</apache.cxf.version>
		<jetty.version>9.2.7.v20150116</jetty.version>
		<jetty.port>8080</jetty.port>
		<jetty.ssl.port>8443</jetty.ssl.port>
		<jetty.stop.port>12919</jetty.stop.port>
		<odata4j.version>0.7.0</odata4j.version>
		<warfile.name>ROOT</warfile.name>
		<skipWebTests>false</skipWebTests>
		<skipSeleniumTests>false</skipSeleniumTests>
		<apache.cxf.version>3.1.1</apache.cxf.version>
		<jersey.version>1.19</jersey.version>

	</properties>
	<parent>
		<groupId>org.tdar</groupId>
		<artifactId>parent</artifactId>
		<version>14-NEOLITHIC-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>

	<prerequisites>
		<maven>3.1.0</maven>
	</prerequisites>
	<organization>
		<name>The Digital Archaeological Record</name>
		<url>http://www.tdar.org</url>
	</organization>

	<!-- 3rd party dependencies and libraries -->
	<dependencies>
		<dependency>
			<groupId>org.tdar</groupId>
			<artifactId>core</artifactId>
			<version>${version}</version>
		</dependency>
		<dependency>
			<groupId>org.tdar</groupId>
			<artifactId>core</artifactId>
			<version>${version}</version>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jmock</groupId>
			<artifactId>jmock-junit4</artifactId>
			<version>2.5.1</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<artifactId>junit</artifactId>
					<groupId>junit</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.jmock</groupId>
			<artifactId>jmock-legacy</artifactId>
			<version>2.5.1</version>
			<scope>test</scope>
			<!-- LICENSE: MIT/BSD VARIENT -->
		</dependency>
		<dependency>
			<groupId>org.codehaus.mojo</groupId>
			<artifactId>keytool-api</artifactId>
			<version>1.5</version>
			<!-- LICENSE: APACHE 2.0 -->
		</dependency>
		<dependency>
			<groupId>fi.reaktor.log4j</groupId>
			<artifactId>log4j-email-throttle</artifactId>
			<version>1.0.0</version>
			<!-- LICENSE: APACHE 2.0 -->
			<exclusions>
			    <exclusion>
			        <artifactId>log4j</artifactId>
			        <groupId>log4j</groupId>
			    </exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>net.sourceforge.htmlunit</groupId>
			<artifactId>htmlunit</artifactId>
			<version>2.18</version>
			<scope>test</scope>
			<!-- LICENSE: APACHE 2.0 -->
			<exclusions>
				<exclusion>
					<artifactId>httpclient</artifactId>
					<groupId>org.apache.httpcomponents</groupId>
				</exclusion>
				<exclusion>
					<artifactId>httpmime</artifactId>
					<groupId>org.apache.httpcomponents</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>javax.el</groupId>
			<artifactId>javax.el-api</artifactId>
			<version>2.2.4</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>${servlet.api.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.2</version>
		</dependency>
		<!-- CXF for web-services endpoint -->
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-transports-http</artifactId>
			<version>${apache.cxf.version}</version>
			<!-- LICENSE: APACHE 2.0 -->
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-frontend-jaxws</artifactId>
			<version>${apache.cxf.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>asm</artifactId>
					<groupId>asm</groupId>
				</exclusion>
			</exclusions>
			<!-- LICENSE: APACHE 2.0 -->
		</dependency>
		<!-- OData (odata4j) Stuff: Begin -->
		<dependency>
			<groupId>org.odata4j</groupId>
			<artifactId>odata4j-core</artifactId>
			<version>${odata4j.version}</version>
			<!-- LICENSE: APACHE 2.0 -->
			<exclusions>
				<exclusion>
					<artifactId>javax.persistence</artifactId>
					<groupId>org.eclipse.persistence</groupId>
				</exclusion>
				<exclusion>
					<artifactId>eclipselink</artifactId>
					<groupId>org.eclipse.persistence</groupId>
				</exclusion>
				<exclusion>
					<artifactId>joda-time</artifactId>
					<groupId>joda-time</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.odata4j</groupId>
			<artifactId>odata4j-jersey</artifactId>
			<version>${odata4j.version}</version>
			<!-- LICENSE: APACHE 2.0 -->
		</dependency>
		<dependency>
			<groupId>org.odata4j</groupId>
			<artifactId>odata4j-fit</artifactId>
			<version>${odata4j.version}</version>
			<!-- LICENSE: APACHE 2.0 -->
		</dependency>
		<!-- OData REST Infrastructure -->
		<!-- REMOVED: GPL 2.0 <dependency> <groupId>com.sun.net.httpserver</groupId> 
			<artifactId>http</artifactId> <version>20070405</version> </dependency> -->
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-server</artifactId>
			<version>${jersey.version}</version>
			<!-- LICENSE: CDDL / GPL 2.0 -->
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-core</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-client</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey.contribs</groupId>
			<artifactId>jersey-spring</artifactId>
			<version>${jersey.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-web</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-beans</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-context</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-aop</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>

	<build>
		<finalName>${warfile.name}</finalName>
		<resources>
			<!-- We only want a small set of files to be filtered. NOTE: These files 
				are NOT read into maven properties for interpolation, they are just the set 
				of files where any interpolated variables will be rewritten according to 
				the currently loaded set of maven properties. To define interpolated variables, 
				the file or variable has to be added to <filters></filters> XXX: only files 
				that need to be rewritten should be included here -->
			<resource>
				<!-- switch filtering off for all but the desired set -->
				<filtering>false</filtering>
				<directory>${basedir}/src/main/resources</directory>
				<excludes>
					<exclude>tdar.properties</exclude>
					<exclude>crowd.properties</exclude>
					<exclude>hibernate.properties</exclude>
					<exclude>common.json</exclude>
					<exclude>liquibase.properties</exclude>
				</excludes>
			</resource>
			<resource>
				<!-- And on for the set of files -->
				<!-- Having to do it as mutually exclusive but that's how Maven works -->
				<!-- See: http://maven.apache.org/plugins/maven-resources-plugin/examples/filter.html -->
				<filtering>true</filtering>
				<directory>${basedir}/src/main/resources</directory>
				<includes>
					<include>tdar.properties</include>
					<include>crowd.properties</include>
					<include>hibernate.properties</include>
					<include>common.json</include>
					<include>liquibase.properties</include>
				</includes>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>${basedir}/src/main/webapp</directory>
			</testResource>
			<!-- <testResource> <directory>src/main/resources</directory> <filtering>true</filtering> 
				</testResource> -->
			<testResource>
				<directory>${basedir}/src/test/resources</directory>
			</testResource>
		</testResources>
		<plugins>
	        <plugin>
	          <artifactId>maven-remote-resources-plugin</artifactId>
	          <version>1.5</version>
	          <executions>
	              <execution>
	                <id>process-test-resources</id>
	                <goals>
	                  <goal>process</goal>
	                </goals>
	                <configuration>
	  				<attachToTest>false</attachToTest>
					<attachToMain>false</attachToMain>
	  			    <outputDirectory>target/test-resources</outputDirectory>
	                  <resourceBundles>
	                    <resourceBundle>org.tdar:test-resources:${project.version}</resourceBundle>
	                  </resourceBundles>
	                </configuration>
	              </execution>
	              <execution>
	                <id>process-database-resources</id>
	                <goals>
	                  <goal>process</goal>
	                </goals>
	                <configuration>
	   				 <attachToMain>false</attachToMain>
		  			  <attachToTest>false</attachToTest>
					  <outputDirectory>target/</outputDirectory>
	                  <resourceBundles>
	                    <resourceBundle>org.tdar:database:${project.version}</resourceBundle>
	                  </resourceBundles>
	                </configuration>
	              </execution>
	          </executions>
	        </plugin>
			<plugin>
				<groupId>org.glassfish</groupId>
				<artifactId>maven-embedded-glassfish-plugin</artifactId>
				<version>3.1.1</version>
				<configuration>
					<goalPrefix>glassfish</goalPrefix>
					<app>target/ROOT</app>
					<name>tDAR</name>
					<port>8080</port>
					<contextRoot>/</contextRoot>
				</configuration>
			</plugin>
			<plugin>
				<!-- http://mojo.codehaus.org/keytool/keytool-maven-plugin/generateKeyPair-mojo.html -->
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>keytool-maven-plugin</artifactId>
				<version>1.5</version>
				<executions>
					<execution>
						<phase>generate-resources</phase>
						<id>generateKeyPair</id>
						<goals>
							<goal>generateKeyPair</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<keystore>${basedir}/src/main/resources/jetty/jetty-ssl.keystore</keystore>
					<dname>cn=localhost</dname>
					<keypass>jetty6</keypass>
					<skipIfExist>true</skipIfExist>
					<storepass>jetty6</storepass>
					<alias>jetty6</alias>
					<keyalg>RSA</keyalg>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.atlassian.maven.plugins</groupId>
				<artifactId>maven-clover2-plugin</artifactId>
				<version>${clover.version}</version>
				<configuration>
					<license>${clover.license}</license>
					<!-- <cloverDatabase>${java.io.tmpdir}/clover/database/</cloverDatabase> -->
					<!-- <cloverOutputDirectory>${java.io.tmpdir}/clover/</cloverOutputDirectory> -->
					<includes>
						<include>**/*.java</include>
					</includes>
					<excludes>
						<exclude>org/tdar/utils/sensorydata/*.java</exclude>
						<exclude>org/tdar/utils/sensorydata/enums/*.java</exclude>
						<exclude>**/PDFCombiner.java</exclude>
						<exclude>**/PDFMergerUtility.java</exclude>
						<exclude>**/CommandLineAPITool.java</exclude>
						<exclude>**/FilesystemFilestore.java</exclude>
						<exclude>**/PairtreeFilestoreMigrator.java</exclude>
					</excludes>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>com.atlassian.clover</groupId>
						<artifactId>clover</artifactId>
						<version>${clover.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<!-- <webappDirectory>${webapp.deploy.dir}</webappDirectory> -->
					<outputDirectory>${webapp.deploy.dir}</outputDirectory>
					<webResources>
						<resource>
							<directory>target/generated/webapp</directory>
							<targetPath>/</targetPath>
							<filtering>false</filtering>
						</resource>
					</webResources>
					<!--<webXml>${webXmlPath}</webXml> -->
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.2</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>

					<!-- <executable>${env.JAVA_HOME_7}/bin/javac</executable> <fork>true</fork> -->

					<!-- Welcome to Maven World, where 'no' means 'yes' and 'yes' means 
						'no'! More info: https://jira.codehaus.org/browse/MCOMPILER-205 http://jira.codehaus.org/browse/MCOMPILER-209 -->
					<useIncrementalCompilation>false</useIncrementalCompilation>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.liquibase</groupId>
				<artifactId>liquibase-maven-plugin</artifactId>
				<configuration>
					<username>${javax.persistence.jdbc.user}</username>
					<password>${javax.persistence.jdbc.password}</password>
					<url>${javax.persistence.jdbc.url}</url>
					<driver>${javax.persistence.jdbc.driver}</driver>
					<verbose>false</verbose>
					<promptOnNonLocalDatabase>false</promptOnNonLocalDatabase>
				</configuration>
				<executions>
					<execution>
						<!-- in the "test" context, drop the database contents, and reload 
							it -->
						<id>test-liquibase</id>
						<configuration>
							<changeLogFile>target/liquibase-test/changelog.xml</changeLogFile>
							<skip>${skipTestLiquibase}</skip>
						</configuration>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>dropAll</goal>
							<goal>update</goal>
						</goals>
					</execution>
					<execution>
						<id>upgrade-liquibase</id>
						<!-- if the liquibase profile is active (default context) run the upgrade -->
						<configuration>
							<changeLogFile>target/liquibase/changelog.xml</changeLogFile>
							<skip>${skipUpgradeLiquibase}</skip>
						</configuration>
						<phase>process-resources</phase>
						<goals>
							<goal>update</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>${jetty.version}</version>
				<configuration>
					<testClassesDirectory>${basedir}/src/test/resources/</testClassesDirectory>
					<useTestClasspath>${use.test.classpath}</useTestClasspath>
					<scanIntervalSeconds>10</scanIntervalSeconds>
					<jettyXml>${basedir}/src/main/resources/jetty/jetty.xml,${basedir}/src/main/resources/jetty/jetty-ssl.xml,${basedir}/src/main/resources/jetty/jetty-https.xml,${basedir}/src/main/resources/jetty/jetty-http.xml</jettyXml>
					<contextXml>${basedir}/src/main/resources/jetty/jetty-context.xml</contextXml>
					<systemProperties>
						      
						<systemProperty>
							       
							<name>jetty.ssl.port</name>
							       
							<value>${jetty.ssl.port}</value>
							     
						</systemProperty>
						      
						<systemProperty>
							       
							<name>maven.rootDir</name>
							       
							<value>${basedir}</value>
							     
						</systemProperty>
						<systemProperty>
							<name>jetty.port</name>
							<value>${jetty.port}</value>
						</systemProperty>
						<!-- <systemProperty> <name>log4j.configuration</name> <value>file:${basedir}/src/main/resources/log4j.xml</value> 
							</systemProperty> -->
						<systemProperty>
							<name>slf4j</name>
							<value>true</value>
						</systemProperty>
					</systemProperties>
					<contextPath>/</contextPath>
					<webDefaultXml>${basedir}/src/main/resources/jetty/webdefault.xml</webDefaultXml>
					<scanIntervalSeconds>0</scanIntervalSeconds>
					<stopKey>tdar</stopKey>
					<webApp>
						<baseResource implementation="org.eclipse.jetty.util.resource.ResourceCollection">
							<resourcesAsCSV>${basedir}/src/main/webapp,${project.build.directory}/generated/webapp</resourcesAsCSV>
						</baseResource>
					</webApp>
					<stopPort>${jetty.stop.port}</stopPort>
				</configuration>
				<executions>
					<execution>
						<id>start-jetty</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
						<configuration>
							<scanIntervalSeconds>0</scanIntervalSeconds>
							<daemon>true</daemon>
						</configuration>
					</execution>
					<execution>
						<id>stop-jetty</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.17</version>
				<configuration>
					<excludes>
						<exclude>**/experimental/*.java</exclude>
					</excludes>
					<skip>${maven.test.skip}</skip>
					<runOrder>alphabetical</runOrder>
					<systemProperties>
						<property>
							<name>maven.version</name>
							<value>${maven.version}</value>
						</property>
						<property>
							<name>maven.home</name>
							<value>${preparedMavenHome}</value>
						</property>
						<property>
							<name>maven.it.global-settings.dir</name>
							<value>${project.build.testOutputDirectory}</value>
						</property>
					</systemProperties>
					<!-- <includes> <include>**/*ITCase.java</include> <include>**/*TestCase.java</include> 
						</includes> -->
					<argLine>${jvm.args}
						-DenableContextSwitchingConfig=true</argLine>
					<junitArtifactName>junit:junit-dep</junitArtifactName>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.9</version>
				<configuration>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.17</version>
				<executions>
					<execution>
						<id>integration-test</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<failIfNoSpecifiedTests>false</failIfNoSpecifiedTests>
							<reportsDirectory>target/failsafe-reports/web</reportsDirectory>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<runOrder>alphabetical</runOrder>
					<systemPropertyVariables>
						<display.port>${display.port}</display.port>
					</systemPropertyVariables>
					<argLine>${jvm.args}
						-DenableContextSwitchingConfig=true</argLine>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>3.0.0</version>
				<configuration>
					<failOnError>false</failOnError>
					<findbugsXmlOutput>false</findbugsXmlOutput>
					<onlyAnalyze>org.tdar.*</onlyAnalyze>
					<includeTests>false</includeTests>
					<excludeFilterFile>src/main/resources/validation_tools/findbugs-exclude.xml</excludeFilterFile>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.4</version>
				<dependencies>
					<dependency>
						<groupId>commons-lang</groupId>
						<artifactId>commons-lang</artifactId>
						<version>2.6</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.6</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8.2</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
				<version>2.5.2</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.7</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>2.13</version>
				<configuration>
					<enableRSS>false</enableRSS>
					<includes>**\/*.java</includes>
					<enableRulesSummary>true</enableRulesSummary>
					<configLocation>src/main/resources/validation_tools/check_style.xml</configLocation>
					<consoleOutput>true</consoleOutput>
				</configuration>
			</plugin>
			<plugin>
				<!-- with this plugin we can do the following to push our war file out 
					to the test server -->
				<!-- mvn clean package tomcat7:redeploy -P faims_test,default -Dserver="FAIMS 
					Test Server" -->
				<!-- note we are using the appropropriate properties declared in the 
					property file in the profile dir: -->
				<!-- /src/main/release/profiles/ -->
				<!-- there is a nice write up here: http://www.javathinking.com/2013/05/deploying-to-tomcat-7-with-maven.html -->
				<!-- a point to remember is that the latest version of tomcat doesn't 
					allow a role to use both manager gui and manager scripts -->
				<!-- so we are reduced to a manger scripts role for this deployment -->
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<server>${tomcat.server.id}</server>
					<url>${tomcat.server.url}</url>
					<path>/</path>
				</configuration>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.liquibase</groupId>
					<artifactId>liquibase-maven-plugin</artifactId>
					<version>${liquibase.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-antrun-plugin</artifactId>
					<groupId>org.apache.maven.plugins</groupId>
					<version>1.7</version>
				</plugin>

				<plugin>
					<groupId>ro.isdc.wro4j</groupId>
					<artifactId>wro4j-maven-plugin</artifactId>
					<version>${wro4j.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>2.1</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>selenium-maven-plugin</artifactId>
					<version>2.3</version>
				</plugin>

				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>properties-maven-plugin</artifactId>
										<versionRange>[1.0-alpha-2,)</versionRange>
										<goals>
											<goal>read-project-properties</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>keytool-maven-plugin</artifactId>
										<versionRange>[1.0,)</versionRange>
										<goals>
											<goal>generateKeyPair</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-antrun-plugin</artifactId>
										<versionRange>[1.3,)</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.liquibase</groupId>
										<artifactId>
											liquibase-maven-plugin
										</artifactId>
										<versionRange>
											[3.2.2,)
										</versionRange>
										<goals>
											<goal>update</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>
			<id>production</id>
			<properties>
				<webapp.deploy.dir>/home/tdar/app</webapp.deploy.dir>
				<maven.test.skip>true</maven.test.skip>
				<maven.createDB.skip>true</maven.createDB.skip>
			</properties>
		</profile>
		<profile>
			<id>alpha</id>
			<properties>
				<webapp.deploy.dir>/home/tdar/app</webapp.deploy.dir>
				<maven.test.skip>true</maven.test.skip>
				<maven.createDB.skip>true</maven.createDB.skip>
			</properties>
			<build>
				<plugins>
					<!-- <plugin> <groupId>org.apache.tomcat.maven</groupId> <artifactId>tomcat7-maven-plugin</artifactId> 
						<version>2.0</version> <configuration> <url>http://localhost:8080/manager/text</url> 
						<server>alpha</server> <path>/ROOT##${maven.build.timestamp}</path> <update>true</update> 
						</configuration> </plugin> -->
				</plugins>
			</build>
		</profile>
		<profile>
			<id>test</id>
			<build>
				<defaultGoal>surefire:test</defaultGoal>
				<filters>
					<filter>src/test/resources/hibernate.properties</filter>
					<filter>src/main/resources/liquibase.properties</filter>
				</filters>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>properties-maven-plugin</artifactId>
						<version>1.0-alpha-2</version>
						<executions>
							<execution>
								<phase>initialize</phase>
								<goals>
									<goal>read-project-properties</goal>
								</goals>
								<configuration>
									<files>
										<file>src/test/resources/hibernate.properties</file>
									</files>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
			<properties>
				<jetty.port>8180</jetty.port>
				<jetty.ssl.port>8143</jetty.ssl.port>
				<jetty.stop.port>12920</jetty.stop.port>
			</properties>
		</profile>
	</profiles>
</project>
