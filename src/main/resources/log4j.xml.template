<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE log4j:configuration SYSTEM "log4j.dtd">
<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">
    <appender class="org.apache.log4j.rolling.RollingFileAppender" name="R">
        <param value="org.apache.log4j.rolling.TimeBasedRollingPolicy" name="rollingPolicy"/>
        <param value="logs/tdar.%d{yyyy-MM-dd}.log" name="FileNamePattern"/>
        <layout class="org.apache.log4j.PatternLayout">
            <param value="%-5p %d %-4r [%t %x] (%F:%L) %c - %m%n" name="ConversionPattern"/>
        </layout>
    </appender>

        <!--
            /**
             * EXPRESSION FILTER INFO
             */

            ExpressionFilter is comically undocumented.  Here's the knowledge I compiled from various parts of the web and the log4j source code.
            Syntax:
                    {KEYWORD} {OPERATOR} {EXPRESSION}  or
                    ( {KEYWORD} {OPERATOR} {EXPRESSION} ) {BOOL_OP} ( {KEYWORD} {OPERATOR} '{EXPRESSION}' )

            Where {KEYWORD} is one of:
                LOGGER
                LEVEL
                CLASS
                FILE
                LINE
                METHOD
                MSG
                NDC
                EXCEPTION
                TIMESTAMP
                THREAD
                PROP.

            {OPERATOR} is one of:
                LIKE (denotes regular expression)
                ~= (denotes... something)
                = >= <= (use with LEVEL keyword, e.g.   "LEVEL >= DEBUG")

            {BOOL_OP} is one of :
                 &&  (but since this is xml,  &amp;&amp;.  what fun!!)
                 ||

            Notes:
               - Spaces are hyper important.  Parens must be separated by space.  Operators too.  In fact, you know what? Just put about 10 spaces
                 between *everything*, just to be safe.
               - any expression that contains spaces must be single quoted.
               - You cannot have multiple <filter> elements in an <appender> node. Use the painfully awkward boolean operators instead.

            Usage (must go inside <appender> node):
                <filter class="org.apache.log4j.filter.ExpressionFilter">
                    <param name="acceptOnMatch" value="false" />
                    <param name="expression" value=" ( MSG LIKE '.*Broken pipe.*' ) &amp;&amp; ( EXCEPTION ~= org.apache.catalina.connector.ClientAbortException ) "  />
                </filter>

        -->
<!--
   <SMTP name="Mail" subject="Error Log" to="errors@logging.apache.org" from="test@logging.apache.org"
          smtpHost="localhost" smtpPort="25" bufferSize="50">
    </SMTP>
-->
	<appender class="org.apache.logging.log4j.core.appender.SmtpAppender" name="smtp">
        <param value="100" name="BufferSize"/>
        <param value="fi.reaktor.log4j.emailthrottle.ErrorEmailThrottle" name="EvaluatorClass"/>
        <param value="tdar-error@tdar.org" name="from"/>
        <param value="localhost" name="SMTPHost"/>
<!--        <param value="%c{1}: %m" name="Subject"/> -->
        <param value="ERROR" name="Threshold"/>
        <param value="adam.brin@asu.edu" name="to"/>
        <layout class="org.apache.log4j.PatternLayout">
            <param value="%d{MMM-dd HH:mm:ss} %-5p %t %c - %m%n" name="ConversionPattern"/>
        </layout>
		
	</appender>

    <appender class="org.tdar.utils.PatternSubjectSMTPAppender" name="smtp">
        <param value="100" name="BufferSize"/>
        <param value="fi.reaktor.log4j.emailthrottle.ErrorEmailThrottle" name="EvaluatorClass"/>
        <param value="tdar-error@tdar.org" name="From"/>
        <param value="localhost" name="SMTPHost"/>
        <param value="%c{1}: %m" name="Subject"/>
        <param value="ERROR" name="Threshold"/>
        <param value="adam.brin@asu.edu" name="To"/>
        <layout class="org.apache.log4j.PatternLayout">
            <param value="%d{MMM-dd HH:mm:ss} %-5p %t %c - %m%n" name="ConversionPattern"/>
        </layout>
    </appender>
    <appender class="org.apache.log4j.ConsoleAppender" name="stdout">
        <layout class="org.apache.log4j.PatternLayout">
            <param value="%-5p %d %-4r [%t %x] (%F:%L) %c - %m%n" name="ConversionPattern"/>
        </layout>
    </appender>
    <logger name="org.hibernate.util.JDBCExceptionReporter">
        <level value="debug"/>
    </logger>
    <logger name="org.tdar">
        <level value="debug"/>
    </logger>
    <logger name="uk.org">
        <level value="debug"/>
    </logger>

    <!-- /**                                            -->
    <!-- *  Hibernate options                           -->
    <!-- */                                             -->

    <!--// log parameterized SQL statements -->
    <!--<logger name="org.hibernate.SQL"><level value="debug"></level></logger>-->

    <!--// log the parameter bindings for above SQL statements -->
    <!--<logger name="org.hibernate.type"><level value="trace"></level></logger>-->


    <!--/**                                              -->
    <!-- * Struts options                                -->
    <!-- */                                              -->

    <!--//  details w.r.t. action lifecycle (interceptors, mappings, action results, etc.) -->
    <!--<logger name="com.opensymphony.xwork2"><level value="debug"></level></logger>-->
    <!--// ognl errors  (type conversion errors, umnmapped form field names) are pretty common, so they are logged at TRACE. Uncomment next line to see them -->
    <!--<logger name="com.opensymphony.xwork2.ognl.OgnlValueStack"><level value="trace"></level></logger>-->



    <root>
        <level value="error"/>
        <appender-ref ref="stdout"/>
        <appender-ref ref="smtp"/>
    </root>
</log4j:configuration>
