<?xml version="1.0" encoding="UTF-8"?>
<!--
vim:sts=2:sw=2
-->
<web-app>
  <display-name>The Digital Archaeological Record</display-name>
  
  <!-- set session timeout -->
  <session-config>
    <session-timeout>480</session-timeout>
  </session-config>

  <!-- FILTERS -->
  <filter>
    <filter-name>UrlRewriteFilter</filter-name>
    <filter-class>org.tuckey.web.filters.urlrewrite.UrlRewriteFilter</filter-class>
    <!-- set the amount of seconds the conf file will be checked for reload
    can be a valid integer (0 denotes check every time,
    -1 denotes no reload check, default -1) -->
    <!-- 
   	<init-param>
	    <param-name>confReloadCheckInterval</param-name>
	    <param-value>-1</param-value>
	</init-param>    
    <init-param>
        <param-name>logLevel</param-name>
        <param-value>DEBUG</param-value>
    </init-param>
     -->  
  </filter>

  <!--	This filter is used to ensure that lazily initialized collections can
		still be viewed in a page. Should rethink whether or not this is
		necessary or we should just make sure we initialize all collections
		that will be used at the time of the request. -->
  <filter>
    <filter-name>osiv-filter</filter-name>
    <filter-class>org.springframework.orm.hibernate4.support.OpenSessionInViewFilter</filter-class>
  </filter>
  
  <filter>
    <filter-name>sitemesh</filter-name>
    <filter-class>com.opensymphony.sitemesh.webapp.SiteMeshFilter</filter-class>
  </filter>
  
  <!-- 	This filter is used to allow for Spring session-scoped objects (such
		as tDAR's SessionData object). -->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:applicationContext.xml</param-value>
  </context-param>
  <filter>
    <filter-name>springFilter</filter-name>
    <filter-class>org.springframework.web.filter.RequestContextFilter</filter-class>
  </filter>
  
  <!-- 	causing an error with missing dependency from xwork 2.1.3-snapshot
		(xwork removed TextUtils) -->
  <filter>
    <filter-name>struts-prepare</filter-name>
    <filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareFilter</filter-class>
  </filter>
  
  <filter>
    <filter-name>struts-execute</filter-name>
    <filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsExecuteFilter</filter-class>
		
  </filter>
  <!-- END FILTERS -->

  <filter-mapping>
    <filter-name>UrlRewriteFilter</filter-name>
    <url-pattern>/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
  </filter-mapping>
  
  <filter-mapping>
    <filter-name>springFilter</filter-name>
    <url-pattern>/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
  </filter-mapping>
  
  <filter-mapping>
    <filter-name>osiv-filter</filter-name>
    <url-pattern>/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
  </filter-mapping>
  
  <filter-mapping>
    <filter-name>struts-prepare</filter-name>
    <url-pattern>/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
  </filter-mapping>
  
  <filter-mapping>
    <filter-name>sitemesh</filter-name>
    <url-pattern>/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
    <dispatcher>INCLUDE</dispatcher>
  </filter-mapping>
  
  <filter-mapping>
    <filter-name>struts-execute</filter-name>
    <url-pattern>/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
  </filter-mapping>
  
  <error-page>
    <error-code>404</error-code>
    <location>/404.html</location>
  </error-page>
  
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  
  <listener>
    <listener-class>org.apache.struts2.dispatcher.ng.listener.StrutsListener</listener-class>
  </listener>
  
  <servlet>
    <description>Apache CXF Endpoint</description>
    <display-name>cxf</display-name>
    <servlet-name>cxf</servlet-name>
    <servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>cxf</servlet-name>
    <url-pattern>/services/*</url-pattern>
  </servlet-mapping>

 <servlet>
        <servlet-name>JSCSSMergeServlet</servlet-name>
        <servlet-class>com.googlecode.webutilities.servlets.JSCSSMergeServlet</servlet-class>
        <!-- This init param is optional and default value is minutes for 7 days in future. To expire in the past use negative value. --> 
        <init-param>
                <param-name>expiresMinutes</param-name>
                <param-value>7200</param-value> <!-- 5 days -->
        </init-param>
        <!-- This init param is also optional and default value is true. Set it false to override.-->
        <init-param>
                <param-name>useCache</param-name>
                <param-value>true</param-value> 
        </init-param>
        <init-param>
                <param-name>autoCorrectUrlsInCSS</param-name>
                <param-value>false</param-value> 
        </init-param>
 </servlet>
<servlet-mapping>
   <servlet-name>JSCSSMergeServlet</servlet-name>
   <url-pattern>*.js</url-pattern>
   <url-pattern>*.css</url-pattern>
</servlet-mapping>  

  
  <servlet>
    <servlet-name>sitemesh-freemarker</servlet-name>
    <servlet-class>org.apache.struts2.sitemesh.FreemarkerDecoratorServlet</servlet-class>
    <init-param>
      <param-name>default_encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>sitemesh-freemarker</servlet-name>
    <url-pattern>*.dec</url-pattern>
  </servlet-mapping>


</web-app>
